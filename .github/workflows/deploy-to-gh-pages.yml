name: Build and Deploy
on:
  push:
    branches:
      - staging
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false 

      - name: Install 🔧
        run: |
          sudo npm install -g @vue/cli
          sudo npm install -g codecov
          sudo npm install -g wait-on
          npm ci

      - name: Run Cypress 🚀
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          # build: npm run build
          start: npm run serve
          wait-on: 'http://localhost:8080'
          record: true
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Run CodeCov 🚀
      #   run: |
      #     codecov --disable=gcov
      
      - name: Generate CodeCov Code Coverage Report 🔧
        run: |
          codecov xml

      - name: Run CodeCov 🚀
        uses: codecov/codecov-action@v1
        with:
          # token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          # file: ./coverage.xml # optional
          # files: ./coverage1.xml,./coverage2.xml # optional
          # flags: unittests # optional
          # name: codecov-umbrella # optional
          fail_ci_if_error: false # optional (default = false)
          verbose: true # optional (default = false)

      - name: Generate Code Climate Quality Report 🔧
          # nyc --reporter=lcov npm run test
        run: |
          sudo yarn global add nyc
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          ./cc-test-reporter format-coverage upload-coverage
          
      # - name: Run Code Climate 🚀
      #   run: |
      #     nyc --reporter=lcov npm run test
      #     ./cc-test-reporter after-build --exit-code

      - name: Run Code Climate 🚀
        uses: paambaati/codeclimate-action@v2.7.4
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          # coverageCommand: npm run coverage
          debug: true

      # - name: Setup SonarQube 🔧
      #   uses: warchant/setup-sonar-scanner@v3

      # - name: Run SonarQube 🚀
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: sonar-scanner
      #       -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Run SonarCloud 🚀
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build 🔧
        run: |
          npm run build

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@3.6.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_BRANCH: staging
          BRANCH: master
          FOLDER: dist